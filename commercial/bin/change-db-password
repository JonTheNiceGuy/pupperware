#! /usr/bin/env bash

set -e

cd "$(dirname "$0")/.." 

echo "* * * * * * * *"
echo "  Changing the database password will restart your running Puppet containers"
echo "* * * * * * * *"
echo ""
echo "Would you like to continue? [y/n]"

match="^[yYnN]$"
negative_match="^[nN]$"
read -r restart

while [[ ! "$restart" =~ $match ]]; do
  echo "Would you like to continue? [y/n]"
  read -r restart
done

if [[ "$restart" =~ $negative_match ]]; then
  echo "Exiting..."
  exit 0
fi

echo ""

stty -echo

printf "Password: "
read -r dbpassword
echo ""

printf "Confirm password: "
read -r dbconfirm
echo ""

stty echo

if [ "$dbpassword" != "$dbconfirm" ]; then
  echo "Passwords didn't match, exiting!"
  exit 1
fi

# change the password in postgresql
docker-compose exec postgres /bin/bash -c "psql -U \$POSTGRES_USER -c \"ALTER USER \$POSTGRES_USER PASSWORD '$dbpassword'\";"
# update the password in the environment sections of docker-compose
sed -i '' "s/PUPPETDB_PASSWORD=.*$/PUPPETDB_PASSWORD=$dbpassword/" docker-compose.yml
sed -i '' "s/POSTGRES_PASSWORD=.*$/POSTGRES_PASSWORD=$dbpassword/" docker-compose.yml

docker-compose stop
# rebuild the postgres and puppetdb containers to pick up the environment change
docker-compose up -d --build postgres
docker-compose up -d --build puppetdb
# start anything else that wasn't pulled in as a dependency
docker-compose up -d
