version: '3'

services:
  puppet:
    hostname: puppet
    image: puppet/puppetserver
    ports:
      - 8140:8140
    environment:
      # DNS_ALT_NAMES must be set before starting the stack the first time,
      # and must list all the names under which the puppetserver can be
      # reached. 'puppet' must be one of them, otherwise puppetdb won't be
      # able to get a cert. Add other names as a comma-separated list
      - DNS_ALT_NAMES=puppet,${DNS_ALT_NAMES:-}
      - PUPPERWARE_ANALYTICS_ENABLED=${PUPPERWARE_ANALYTICS_ENABLED:-true}
      - PUPPETDB_SERVER_URLS=https://puppetdb:8081
    volumes:
      - ${VOLUME_ROOT:-.}/volumes/code:/etc/puppetlabs/code/
      - ${VOLUME_ROOT:-.}/volumes/puppet:/etc/puppetlabs/puppet/
      - ${VOLUME_ROOT:-.}/volumes/serverdata:/opt/puppetlabs/server/data/puppetserver/
    networks:
      default:
        aliases:
         - puppet.${AZURE_DOMAIN:-}

  postgres:
    image: postgres:9.6
    environment:
      - POSTGRES_PASSWORD=puppetdb
      - POSTGRES_USER=puppetdb
      - POSTGRES_DB=puppetdb
    expose:
      - 5432
    volumes:
      - ${VOLUME_ROOT:-.}/volumes/puppetdb-postgres/data:/var/lib/postgresql/data
      - ./postgres-custom:/docker-entrypoint-initdb.d

  puppetdb:
    hostname: puppetdb
    image: puppet/puppetdb
    environment:
      - PUPPERWARE_ANALYTICS_ENABLED=${PUPPERWARE_ANALYTICS_ENABLED:-true}
      # This name is an FQDN so the short name puppet doesn't collide outside compose network
      - PUPPETSERVER_HOSTNAME=puppet.${AZURE_DOMAIN:-}
      - PUPPETDB_PASSWORD=puppetdb
      - PUPPETDB_USER=puppetdb
    ports:
      - 8080
      - 8081
    depends_on:
      - postgres
      - puppet
    volumes:
      - ${VOLUME_ROOT:-.}/volumes/puppetdb/ssl:/etc/puppetlabs/puppet/ssl/
