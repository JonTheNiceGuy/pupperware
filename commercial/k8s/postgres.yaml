---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: pupperware
spec:
  ports:
    - port: 5432
  selector:
    app: pupperware
    svc: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-claim
  labels:
    app: pupperware
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
data:
  extensions.sql: |
    CREATE EXTENSION IF NOT EXISTS pg_trgm;
    CREATE EXTENSION IF NOT EXISTS pgcrypto;
kind: ConfigMap
metadata:
  name: postgres-custom-extensions
  labels:
    app: pupperware
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: pupperware
spec:
  selector:
    matchLabels:
      app: pupperware
      svc: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pupperware
        svc: postgres
    spec:
      hostname: postgres
      containers:
        - image: postgres:9.6
          name: postgres
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: puppetdb
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: puppetdb
                  key: user
            - name: POSTGRES_DB
              value: puppetdb
          ports:
            - name: postgres
              containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data/
            - name: postgres-custom-extensions
              mountPath: /docker-entrypoint-initdb.d/postgres-custom
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-claim
        - name: postgres-custom-extensions
          configMap:
            name: postgres-custom-extensions
