version: '3.7'
services:
  postgres:
    image: ${POSTGRES_IMAGE:-postgres:9.6.15}
    hostname: postgres
    environment:
      # to be able to preload certs, PGDATA must be empty when booting, so set
      # its directory as a subdirectory of the default /var/lib/postgresql/data VOLUME
      - PGDATA=/var/lib/postgresql/data/pgdata
      - PGPORT=5432
      - SSLDIR=/var/lib/postgresql/data/certs
      - CERTNAME=postgres
      # NOTE: Java follows RFC 2818 stating when SAN is provided, it's authoritative / Subject should be ignored
      - DNS_ALT_NAMES=postgres
      - POSTGRES_USER=puppetdb
      - POSTGRES_PASSWORD=puppetdb
      - POSTGRES_DB=puppetdb
      - PUPPETSERVER_HOSTNAME=puppet
      - PUPPETSERVER_PORT=8140
      - ALLOWED_CERT_NAMES=puppetdb,pe-console-services,pe-orchestration-services
      # Testing specific variable needed to bootstrap cert preloading
      - CERT_VOLUME=puppetdb-postgres
    command: [ "postgres",
      "-c", "max_connections=400",
      "-c", "ssl=on",
      "-c", "ssl_ca_file=root.crt",
      "-c", "ssl_cert_file=server.crt",
      "-c", "ssl_crl_file=root.crl",
      "-c", "ssl_key_file=server.key",
      "-c", "log_destination=stderr",
      "-c", "logging_collector=on",
      "-c", "log_connections=on",
      "-c", "log_disconnections=on",
      "-c", "log_hostname=on"
    ]
    # To open up an SSL connection by generating certs requires a working Puppetserver
    # which can take 4m or so worst case under LCOW
    # The other timing parameters are set so that it takes at most 2m30s after the initial
    # 4 minutes to realize that Postgres has failed.
    # Probe failure during --start-period will not be counted towards the maximum number of retries
    healthcheck:
        start_period: 4m
        interval: 10s
        timeout: 5s
        retries: 15
        # postgres SSL configured / operational and connectable
        # NOTE: host *must* be specified to enable sslmode!
        # this generates an exit code of 2 when connections are refused
        # and the query results here are a 't' if SSL is on *or*  a 'f' otherwise
        test: >
          sh -c '[ -f "$${SSLDIR}/certs/$${CERTNAME}.pem" ] &&
          psql --username=puppetdb --dbname=pe-activity --command "SELECT 1" 2>&1 &&
          psql --username=puppetdb --dbname=postgres --set=sslmode=required --host=localhost --command "SELECT ssl_is_used();" --tuples-only 2>&1 |
          grep --quiet " t"'
    volumes:
      - puppetdb-postgres:/var/lib/postgresql/data
      - ${ADDITIONAL_COMPOSE_SERVICES_PATH}/pe-postgres-custom:/docker-entrypoint-initdb.d
    restart: always
    expose:
      - 5432

volumes:
  puppetdb-postgres:
    # Testing specific variable needed to bootstrap cert preloading
    labels:
      com.puppet.certs.uid: 999
      com.puppet.certs.gid: 999
